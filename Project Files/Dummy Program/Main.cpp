#include <iostream>
#include <windows.h>
#include <chrono>
#include <thread>

bool isRunning(LPCSTR pName)
{
	HWND hwnd;
	hwnd = FindWindow(NULL, pName);
	if (hwnd != 0) {
		return true; //Returns 1
	}
	else {
		return false; //Returns 0
	}
}

void dummyFunction() {
	using namespace std;

	cout << "Welcome To \"Free Netflix Sub Key Finder\"\n";
	std::this_thread::sleep_for(std::chrono::milliseconds(1000));

	cout << "Starting Fetch Module...\n";
	std::this_thread::sleep_for(std::chrono::milliseconds(4000));
	
	cout << "Fetching Information...\n";
	std::this_thread::sleep_for(std::chrono::milliseconds(4000));
	system("cls");

	for (int i = 0; i < 2; i++) {
		cout << "Installing Free Netflix Subscription Key... \\ \n";
		std::this_thread::sleep_for(std::chrono::milliseconds(500));
		system("cls");

		cout << "Installing Free Netflix Subscription Key... | \n";
		std::this_thread::sleep_for(std::chrono::milliseconds(500));
		system("cls");

		cout << "Installing Free Netflix Subscription Key... / \n";
		std::this_thread::sleep_for(std::chrono::milliseconds(500));
		system("cls");
	}

	cout << "Netfix Keys installed\n";
	std::this_thread::sleep_for(std::chrono::milliseconds(3000));
}

int main() {
    bool getP = isRunning("Malware Awerness Training");

	if(getP == 0) {
		std::cout << "Main application not detected: Please run the main application first! (Malware Awerness Training.exe)";
		std::this_thread::sleep_for(std::chrono::milliseconds(100000));
	}
	else if (getP == 1) {
		dummyFunction();
	}

	exit(0);
}
